<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" ignored="27" total="86" passed="59">
  <reporter-output>
  </reporter-output>
  <suite name="Unit Tests" duration-ms="2940" started-at="2018-01-16T15:32:17Z" finished-at="2018-01-16T15:32:20Z">
    <groups>
      <group name="usertest">
        <method signature="ItemsTest.getAllActiveItemsTest()[pri:0, instance:testng.ItemsTest@4b952a2d]" name="getAllActiveItemsTest" class="testng.ItemsTest"/>
        <method signature="ItemsTest.getItemsCountTest()[pri:0, instance:testng.ItemsTest@4b952a2d]" name="getItemsCountTest" class="testng.ItemsTest"/>
        <method signature="ItemsTest.getTotalsTest(java.lang.String, java.util.HashSet, java.lang.Double)[pri:0, instance:testng.ItemsTest@4b952a2d]" name="getTotalsTest" class="testng.ItemsTest"/>
        <method signature="OrdersTest.addItemToOrderTest(java.lang.String, int, int, boolean)[pri:0, instance:testng.OrdersTest@3159c4b8]" name="addItemToOrderTest" class="testng.OrdersTest"/>
        <method signature="OrdersTest.createOrderTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, boolean)[pri:0, instance:testng.OrdersTest@3159c4b8]" name="createOrderTest" class="testng.OrdersTest"/>
        <method signature="OrdersTest.getOrdersByUserTest(java.lang.String, int, boolean)[pri:0, instance:testng.OrdersTest@3159c4b8]" name="getOrdersByUserTest" class="testng.OrdersTest"/>
        <method signature="ReceiptsTest.getReceiptItemsTest(java.lang.String, int, boolean)[pri:0, instance:testng.ReceiptsTest@73846619]" name="getReceiptItemsTest" class="testng.ReceiptsTest"/>
        <method signature="ReceiptsTest.getReceiptSummaryTest(java.lang.String, int, del.res.models.ReceiptSummary)[pri:0, instance:testng.ReceiptsTest@73846619]" name="getReceiptSummaryTest" class="testng.ReceiptsTest"/>
        <method signature="ReceiptsTest.validateUserTest(java.lang.String, int, int, boolean)[pri:0, instance:testng.ReceiptsTest@73846619]" name="validateUserTest" class="testng.ReceiptsTest"/>
        <method signature="ReviewsTest.getItemInfoTest(java.lang.String, java.lang.String, del.res.models.Item)[pri:0, instance:testng.ReviewsTest@4bec1f0c]" name="getItemInfoTest" class="testng.ReviewsTest"/>
        <method signature="ReviewsTest.getPastReviewsTest(java.lang.String, java.lang.String, boolean)[pri:0, instance:testng.ReviewsTest@4bec1f0c]" name="getPastReviewsTest" class="testng.ReviewsTest"/>
        <method signature="ReviewsTest.submitReviewTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, boolean)[pri:0, instance:testng.ReviewsTest@4bec1f0c]" name="submitReviewTest" class="testng.ReviewsTest"/>
        <method signature="StoresTest.getAllStoresTest()[pri:0, instance:testng.StoresTest@29ca901e]" name="getAllStoresTest" class="testng.StoresTest"/>
        <method signature="UsersTest.createUserTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, int)[pri:0, instance:testng.UsersTest@5649fd9b]" name="createUserTest" class="testng.UsersTest"/>
        <method signature="UsersTest.getDetailsTest(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testng.UsersTest@5649fd9b]" name="getDetailsTest" class="testng.UsersTest"/>
        <method signature="UsersTest.loginQueryTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testng.UsersTest@5649fd9b]" name="loginQueryTest" class="testng.UsersTest"/>
        <method signature="UsersTest.registerQueryTest(java.lang.String, java.lang.String, boolean)[pri:0, instance:testng.UsersTest@5649fd9b]" name="registerQueryTest" class="testng.UsersTest"/>
        <method signature="UsersTest.updateUserTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, int)[pri:0, instance:testng.UsersTest@5649fd9b]" name="updateUserTest" class="testng.UsersTest"/>
      </group> <!-- usertest -->
      <group name="functest">
        <method signature="ItemsTest.getAllActiveItemsTest()[pri:0, instance:testng.ItemsTest@4b952a2d]" name="getAllActiveItemsTest" class="testng.ItemsTest"/>
        <method signature="ItemsTest.getItemsCountTest()[pri:0, instance:testng.ItemsTest@4b952a2d]" name="getItemsCountTest" class="testng.ItemsTest"/>
        <method signature="ItemsTest.getTotalsTest(java.lang.String, java.util.HashSet, java.lang.Double)[pri:0, instance:testng.ItemsTest@4b952a2d]" name="getTotalsTest" class="testng.ItemsTest"/>
        <method signature="OrdersTest.addItemToOrderTest(java.lang.String, int, int, boolean)[pri:0, instance:testng.OrdersTest@3159c4b8]" name="addItemToOrderTest" class="testng.OrdersTest"/>
        <method signature="OrdersTest.createOrderTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, boolean)[pri:0, instance:testng.OrdersTest@3159c4b8]" name="createOrderTest" class="testng.OrdersTest"/>
        <method signature="OrdersTest.getOrdersByUserTest(java.lang.String, int, boolean)[pri:0, instance:testng.OrdersTest@3159c4b8]" name="getOrdersByUserTest" class="testng.OrdersTest"/>
        <method signature="ReceiptsTest.getReceiptItemsTest(java.lang.String, int, boolean)[pri:0, instance:testng.ReceiptsTest@73846619]" name="getReceiptItemsTest" class="testng.ReceiptsTest"/>
        <method signature="ReceiptsTest.getReceiptSummaryTest(java.lang.String, int, del.res.models.ReceiptSummary)[pri:0, instance:testng.ReceiptsTest@73846619]" name="getReceiptSummaryTest" class="testng.ReceiptsTest"/>
        <method signature="ReceiptsTest.validateUserTest(java.lang.String, int, int, boolean)[pri:0, instance:testng.ReceiptsTest@73846619]" name="validateUserTest" class="testng.ReceiptsTest"/>
        <method signature="ReviewsTest.getItemInfoTest(java.lang.String, java.lang.String, del.res.models.Item)[pri:0, instance:testng.ReviewsTest@4bec1f0c]" name="getItemInfoTest" class="testng.ReviewsTest"/>
        <method signature="ReviewsTest.getPastReviewsTest(java.lang.String, java.lang.String, boolean)[pri:0, instance:testng.ReviewsTest@4bec1f0c]" name="getPastReviewsTest" class="testng.ReviewsTest"/>
        <method signature="ReviewsTest.submitReviewTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, boolean)[pri:0, instance:testng.ReviewsTest@4bec1f0c]" name="submitReviewTest" class="testng.ReviewsTest"/>
        <method signature="StoresTest.getAllStoresTest()[pri:0, instance:testng.StoresTest@29ca901e]" name="getAllStoresTest" class="testng.StoresTest"/>
        <method signature="UsersTest.createUserTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, int)[pri:0, instance:testng.UsersTest@5649fd9b]" name="createUserTest" class="testng.UsersTest"/>
        <method signature="UsersTest.getDetailsTest(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testng.UsersTest@5649fd9b]" name="getDetailsTest" class="testng.UsersTest"/>
        <method signature="UsersTest.loginQueryTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testng.UsersTest@5649fd9b]" name="loginQueryTest" class="testng.UsersTest"/>
        <method signature="UsersTest.registerQueryTest(java.lang.String, java.lang.String, boolean)[pri:0, instance:testng.UsersTest@5649fd9b]" name="registerQueryTest" class="testng.UsersTest"/>
        <method signature="UsersTest.updateUserTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, int)[pri:0, instance:testng.UsersTest@5649fd9b]" name="updateUserTest" class="testng.UsersTest"/>
        <method signature="ItemsTest.addItemTest(java.lang.String, java.util.ArrayList, boolean)[pri:0, instance:testng.ItemsTest@3632be31]" name="addItemTest" class="testng.ItemsTest"/>
        <method signature="ItemsTest.getAllItemsTest()[pri:0, instance:testng.ItemsTest@3632be31]" name="getAllItemsTest" class="testng.ItemsTest"/>
        <method signature="ItemsTest.updateItemTest(java.lang.String, java.util.ArrayList, boolean)[pri:0, instance:testng.ItemsTest@3632be31]" name="updateItemTest" class="testng.ItemsTest"/>
        <method signature="OrdersTest.getAllOrdersTest()[pri:0, instance:testng.OrdersTest@5abca1e0]" name="getAllOrdersTest" class="testng.OrdersTest"/>
        <method signature="ReviewsTest.getReviewsByUserTest(java.lang.String, java.lang.String, boolean)[pri:0, instance:testng.ReviewsTest@2286778]" name="getReviewsByUserTest" class="testng.ReviewsTest"/>
        <method signature="StoresTest.createStoreTest(java.lang.String, del.res.models.Store, boolean)[pri:0, instance:testng.StoresTest@4e9ba398]" name="createStoreTest" class="testng.StoresTest"/>
        <method signature="StoresTest.updateStoreTest(java.lang.String, del.res.models.Store, boolean)[pri:0, instance:testng.StoresTest@4e9ba398]" name="updateStoreTest" class="testng.StoresTest"/>
      </group> <!-- functest -->
      <group name="admintest">
        <method signature="ItemsTest.addItemTest(java.lang.String, java.util.ArrayList, boolean)[pri:0, instance:testng.ItemsTest@3632be31]" name="addItemTest" class="testng.ItemsTest"/>
        <method signature="ItemsTest.getAllItemsTest()[pri:0, instance:testng.ItemsTest@3632be31]" name="getAllItemsTest" class="testng.ItemsTest"/>
        <method signature="ItemsTest.updateItemTest(java.lang.String, java.util.ArrayList, boolean)[pri:0, instance:testng.ItemsTest@3632be31]" name="updateItemTest" class="testng.ItemsTest"/>
        <method signature="OrdersTest.getAllOrdersTest()[pri:0, instance:testng.OrdersTest@5abca1e0]" name="getAllOrdersTest" class="testng.OrdersTest"/>
        <method signature="ReviewsTest.getReviewsByUserTest(java.lang.String, java.lang.String, boolean)[pri:0, instance:testng.ReviewsTest@2286778]" name="getReviewsByUserTest" class="testng.ReviewsTest"/>
        <method signature="StoresTest.createStoreTest(java.lang.String, del.res.models.Store, boolean)[pri:0, instance:testng.StoresTest@4e9ba398]" name="createStoreTest" class="testng.StoresTest"/>
        <method signature="StoresTest.updateStoreTest(java.lang.String, del.res.models.Store, boolean)[pri:0, instance:testng.StoresTest@4e9ba398]" name="updateStoreTest" class="testng.StoresTest"/>
      </group> <!-- admintest -->
    </groups>
    <test name="Regular User Tests" duration-ms="2342" started-at="2018-01-16T15:32:17Z" finished-at="2018-01-16T15:32:20Z">
      <class name="testng.StoresTest">
        <test-method status="PASS" signature="before()[pri:0, instance:testng.StoresTest@29ca901e]" name="before" is-config="true" duration-ms="1" started-at="2018-01-16T10:32:19Z" finished-at="2018-01-16T10:32:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="getAllStoresTest()[pri:0, instance:testng.StoresTest@29ca901e]" name="getAllStoresTest" duration-ms="23" started-at="2018-01-16T10:32:19Z" finished-at="2018-01-16T10:32:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAllStoresTest -->
        <test-method status="PASS" signature="after()[pri:0, instance:testng.StoresTest@29ca901e]" name="after" is-config="true" duration-ms="0" started-at="2018-01-16T10:32:19Z" finished-at="2018-01-16T10:32:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
      </class> <!-- testng.StoresTest -->
      <class name="testng.ReceiptsTest">
        <test-method status="PASS" signature="getReceiptItemsTest(java.lang.String, int, boolean)[pri:0, instance:testng.ReceiptsTest@73846619]" name="getReceiptItemsTest" duration-ms="25" started-at="2018-01-16T10:32:18Z" data-provider="getReceiptItems" finished-at="2018-01-16T10:32:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Valid]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getReceiptItemsTest -->
        <test-method status="PASS" signature="before()[pri:0, instance:testng.ReceiptsTest@73846619]" name="before" is-config="true" duration-ms="0" started-at="2018-01-16T10:32:18Z" finished-at="2018-01-16T10:32:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="getReceiptItemsTest(java.lang.String, int, boolean)[pri:0, instance:testng.ReceiptsTest@73846619]" name="getReceiptItemsTest" duration-ms="24" started-at="2018-01-16T10:32:18Z" data-provider="getReceiptItems" finished-at="2018-01-16T10:32:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Has no items]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[29]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getReceiptItemsTest -->
        <test-method status="PASS" signature="before()[pri:0, instance:testng.ReceiptsTest@73846619]" name="before" is-config="true" duration-ms="0" started-at="2018-01-16T10:32:18Z" finished-at="2018-01-16T10:32:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="before()[pri:0, instance:testng.ReceiptsTest@73846619]" name="before" is-config="true" duration-ms="0" started-at="2018-01-16T10:32:18Z" finished-at="2018-01-16T10:32:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="getReceiptSummaryTest(java.lang.String, int, del.res.models.ReceiptSummary)[pri:0, instance:testng.ReceiptsTest@73846619]" name="getReceiptSummaryTest" duration-ms="28" started-at="2018-01-16T10:32:18Z" data-provider="getReceiptSummary" finished-at="2018-01-16T10:32:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Valid]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[del.res.models.ReceiptSummary@1e13529a]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getReceiptSummaryTest -->
        <test-method status="PASS" signature="validateUserTest(java.lang.String, int, int, boolean)[pri:0, instance:testng.ReceiptsTest@73846619]" name="validateUserTest" duration-ms="23" started-at="2018-01-16T10:32:19Z" data-provider="validateUser" finished-at="2018-01-16T10:32:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Valid]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateUserTest -->
        <test-method status="PASS" signature="before()[pri:0, instance:testng.ReceiptsTest@73846619]" name="before" is-config="true" duration-ms="0" started-at="2018-01-16T10:32:19Z" finished-at="2018-01-16T10:32:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
      </class> <!-- testng.ReceiptsTest -->
      <class name="testng.UsersTest">
        <test-method status="PASS" signature="before()[pri:0, instance:testng.UsersTest@5649fd9b]" name="before" is-config="true" duration-ms="1" started-at="2018-01-16T10:32:19Z" finished-at="2018-01-16T10:32:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="createUserTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, int)[pri:0, instance:testng.UsersTest@5649fd9b]" name="createUserTest" duration-ms="46" started-at="2018-01-16T10:32:19Z" data-provider="createUser" finished-at="2018-01-16T10:32:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Valid credentials; user created]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[mike2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[mike]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Mike]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Mike]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[m]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[23 Mars Place]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[1234567890]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[mike@mike.com]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createUserTest -->
        <test-method status="PASS" signature="after()[pri:0, instance:testng.UsersTest@5649fd9b]" name="after" is-config="true" duration-ms="22" started-at="2018-01-16T10:32:19Z" finished-at="2018-01-16T10:32:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
        <test-method status="PASS" signature="createUserTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, int)[pri:0, instance:testng.UsersTest@5649fd9b]" name="createUserTest" duration-ms="51" started-at="2018-01-16T10:32:19Z" data-provider="createUser" finished-at="2018-01-16T10:32:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Username, too long]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[aaaaaaaaaaaaaaaaaaaaa]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[mike]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Mike]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Mike]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[m]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[23 Mars Place]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[1234567890]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[mike@mike.com]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createUserTest -->
        <test-method status="PASS" signature="before()[pri:0, instance:testng.UsersTest@5649fd9b]" name="before" is-config="true" duration-ms="0" started-at="2018-01-16T10:32:19Z" finished-at="2018-01-16T10:32:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="before()[pri:0, instance:testng.UsersTest@5649fd9b]" name="before" is-config="true" duration-ms="0" started-at="2018-01-16T10:32:19Z" finished-at="2018-01-16T10:32:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="createUserTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, int)[pri:0, instance:testng.UsersTest@5649fd9b]" name="createUserTest" duration-ms="47" started-at="2018-01-16T10:32:19Z" data-provider="createUser" finished-at="2018-01-16T10:32:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Password too long]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[mike4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[aaaaaaaaaaaaaaaaaaaaa]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Mike]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Mike]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[m]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[23 Mars Place]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[1234567890]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[mike@mike.com]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createUserTest -->
        <test-method status="PASS" signature="after()[pri:0, instance:testng.UsersTest@5649fd9b]" name="after" is-config="true" duration-ms="0" started-at="2018-01-16T10:32:19Z" finished-at="2018-01-16T10:32:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
        <test-method status="PASS" signature="after()[pri:0, instance:testng.UsersTest@5649fd9b]" name="after" is-config="true" duration-ms="0" started-at="2018-01-16T10:32:19Z" finished-at="2018-01-16T10:32:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
        <test-method status="PASS" signature="before()[pri:0, instance:testng.UsersTest@5649fd9b]" name="before" is-config="true" duration-ms="0" started-at="2018-01-16T10:32:19Z" finished-at="2018-01-16T10:32:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="createUserTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, int)[pri:0, instance:testng.UsersTest@5649fd9b]" name="createUserTest" duration-ms="49" started-at="2018-01-16T10:32:19Z" data-provider="createUser" finished-at="2018-01-16T10:32:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Firstname too long]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[mike5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[mike]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[aaaaaaaaaaaaaaaaaaaaa]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Mike]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[m]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[24 Mars Place]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[1234567890]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[mike@mike.com]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createUserTest -->
        <test-method status="PASS" signature="after()[pri:0, instance:testng.UsersTest@5649fd9b]" name="after" is-config="true" duration-ms="0" started-at="2018-01-16T10:32:19Z" finished-at="2018-01-16T10:32:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
        <test-method status="PASS" signature="before()[pri:0, instance:testng.UsersTest@5649fd9b]" name="before" is-config="true" duration-ms="1" started-at="2018-01-16T10:32:19Z" finished-at="2018-01-16T10:32:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="createUserTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, int)[pri:0, instance:testng.UsersTest@5649fd9b]" name="createUserTest" duration-ms="47" started-at="2018-01-16T10:32:19Z" data-provider="createUser" finished-at="2018-01-16T10:32:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Lastname too long]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[mike6]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[mike]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Mike]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[aaaaaaaaaaaaaaaaaaaaa]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[m]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[25 Mars Place]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[1234567890]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[mike@mike.com]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createUserTest -->
        <test-method status="PASS" signature="after()[pri:0, instance:testng.UsersTest@5649fd9b]" name="after" is-config="true" duration-ms="1" started-at="2018-01-16T10:32:19Z" finished-at="2018-01-16T10:32:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
        <test-method status="PASS" signature="before()[pri:0, instance:testng.UsersTest@5649fd9b]" name="before" is-config="true" duration-ms="0" started-at="2018-01-16T10:32:19Z" finished-at="2018-01-16T10:32:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="createUserTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, int)[pri:0, instance:testng.UsersTest@5649fd9b]" name="createUserTest" duration-ms="48" started-at="2018-01-16T10:32:19Z" data-provider="createUser" finished-at="2018-01-16T10:32:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Gender more than 1 char]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[mike7]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[mike]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Mike]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Mike]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[mm]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[26 Mars Place]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[1234567890]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[mike@mike.com]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createUserTest -->
        <test-method status="PASS" signature="after()[pri:0, instance:testng.UsersTest@5649fd9b]" name="after" is-config="true" duration-ms="0" started-at="2018-01-16T10:32:19Z" finished-at="2018-01-16T10:32:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
        <test-method status="PASS" signature="createUserTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, int)[pri:0, instance:testng.UsersTest@5649fd9b]" name="createUserTest" duration-ms="45" started-at="2018-01-16T10:32:19Z" data-provider="createUser" finished-at="2018-01-16T10:32:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Address too long]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[mike8]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[mike]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Mike]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Mike]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[m]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[1234567890]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[mike@mike.com]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createUserTest -->
        <test-method status="PASS" signature="before()[pri:0, instance:testng.UsersTest@5649fd9b]" name="before" is-config="true" duration-ms="0" started-at="2018-01-16T10:32:19Z" finished-at="2018-01-16T10:32:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="after()[pri:0, instance:testng.UsersTest@5649fd9b]" name="after" is-config="true" duration-ms="0" started-at="2018-01-16T10:32:19Z" finished-at="2018-01-16T10:32:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
        <test-method status="PASS" signature="createUserTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, int)[pri:0, instance:testng.UsersTest@5649fd9b]" name="createUserTest" duration-ms="49" started-at="2018-01-16T10:32:19Z" data-provider="createUser" finished-at="2018-01-16T10:32:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Phone non-numeric]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[mike9]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[mike]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Mike]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Mike]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[m]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[23 Mars Place]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[abcdefghij]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[mike@mike.com]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createUserTest -->
        <test-method status="PASS" signature="before()[pri:0, instance:testng.UsersTest@5649fd9b]" name="before" is-config="true" duration-ms="0" started-at="2018-01-16T10:32:19Z" finished-at="2018-01-16T10:32:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="createUserTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, int)[pri:0, instance:testng.UsersTest@5649fd9b]" name="createUserTest" duration-ms="54" started-at="2018-01-16T10:32:19Z" data-provider="createUser" finished-at="2018-01-16T10:32:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Email too long]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[mike10]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[mike]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Mike]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Mike]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[m]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[23 Mars Place]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[23 Mars Place]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[aaaaaaaaaaaaaaaaaaaaa@aaaaaaaaaaaaaaaaaaaaa.com]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createUserTest -->
        <test-method status="PASS" signature="before()[pri:0, instance:testng.UsersTest@5649fd9b]" name="before" is-config="true" duration-ms="0" started-at="2018-01-16T10:32:19Z" finished-at="2018-01-16T10:32:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="after()[pri:0, instance:testng.UsersTest@5649fd9b]" name="after" is-config="true" duration-ms="0" started-at="2018-01-16T10:32:19Z" finished-at="2018-01-16T10:32:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
        <test-method status="PASS" signature="after()[pri:0, instance:testng.UsersTest@5649fd9b]" name="after" is-config="true" duration-ms="0" started-at="2018-01-16T10:32:19Z" finished-at="2018-01-16T10:32:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
        <test-method status="PASS" signature="before()[pri:0, instance:testng.UsersTest@5649fd9b]" name="before" is-config="true" duration-ms="1" started-at="2018-01-16T10:32:19Z" finished-at="2018-01-16T10:32:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="getDetailsTest(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testng.UsersTest@5649fd9b]" name="getDetailsTest" duration-ms="26" started-at="2018-01-16T10:32:19Z" data-provider="getDetails" finished-at="2018-01-16T10:32:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Valid ID]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[mike]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getDetailsTest -->
        <test-method status="PASS" signature="after()[pri:0, instance:testng.UsersTest@5649fd9b]" name="after" is-config="true" duration-ms="0" started-at="2018-01-16T10:32:19Z" finished-at="2018-01-16T10:32:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
        <test-method status="PASS" signature="getDetailsTest(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testng.UsersTest@5649fd9b]" name="getDetailsTest" duration-ms="24" started-at="2018-01-16T10:32:19Z" data-provider="getDetails" finished-at="2018-01-16T10:32:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Invalid ID]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4000]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[null]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getDetailsTest -->
        <test-method status="PASS" signature="before()[pri:0, instance:testng.UsersTest@5649fd9b]" name="before" is-config="true" duration-ms="0" started-at="2018-01-16T10:32:19Z" finished-at="2018-01-16T10:32:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="after()[pri:0, instance:testng.UsersTest@5649fd9b]" name="after" is-config="true" duration-ms="0" started-at="2018-01-16T10:32:19Z" finished-at="2018-01-16T10:32:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
        <test-method status="PASS" signature="before()[pri:0, instance:testng.UsersTest@5649fd9b]" name="before" is-config="true" duration-ms="0" started-at="2018-01-16T10:32:19Z" finished-at="2018-01-16T10:32:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="getDetailsTest(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testng.UsersTest@5649fd9b]" name="getDetailsTest" duration-ms="23" started-at="2018-01-16T10:32:19Z" data-provider="getDetails" finished-at="2018-01-16T10:32:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[ID contains non-numeric chars]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[abc]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[null]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getDetailsTest -->
        <test-method status="PASS" signature="after()[pri:0, instance:testng.UsersTest@5649fd9b]" name="after" is-config="true" duration-ms="0" started-at="2018-01-16T10:32:19Z" finished-at="2018-01-16T10:32:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
        <test-method status="PASS" signature="before()[pri:0, instance:testng.UsersTest@5649fd9b]" name="before" is-config="true" duration-ms="0" started-at="2018-01-16T10:32:19Z" finished-at="2018-01-16T10:32:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="loginQueryTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testng.UsersTest@5649fd9b]" name="loginQueryTest" duration-ms="23" started-at="2018-01-16T10:32:19Z" data-provider="loginQuery" finished-at="2018-01-16T10:32:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Valid Normal Login Creds]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[mike]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[mike]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginQueryTest -->
        <test-method status="PASS" signature="before()[pri:0, instance:testng.UsersTest@5649fd9b]" name="before" is-config="true" duration-ms="0" started-at="2018-01-16T10:32:19Z" finished-at="2018-01-16T10:32:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="loginQueryTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testng.UsersTest@5649fd9b]" name="loginQueryTest" duration-ms="25" started-at="2018-01-16T10:32:19Z" data-provider="loginQuery" finished-at="2018-01-16T10:32:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Invalid username]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[abcd1234]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[mike]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[null]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginQueryTest -->
        <test-method status="PASS" signature="after()[pri:0, instance:testng.UsersTest@5649fd9b]" name="after" is-config="true" duration-ms="0" started-at="2018-01-16T10:32:19Z" finished-at="2018-01-16T10:32:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
        <test-method status="PASS" signature="before()[pri:0, instance:testng.UsersTest@5649fd9b]" name="before" is-config="true" duration-ms="0" started-at="2018-01-16T10:32:19Z" finished-at="2018-01-16T10:32:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="after()[pri:0, instance:testng.UsersTest@5649fd9b]" name="after" is-config="true" duration-ms="0" started-at="2018-01-16T10:32:19Z" finished-at="2018-01-16T10:32:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
        <test-method status="PASS" signature="loginQueryTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testng.UsersTest@5649fd9b]" name="loginQueryTest" duration-ms="26" started-at="2018-01-16T10:32:19Z" data-provider="loginQuery" finished-at="2018-01-16T10:32:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Invalid password]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[mike]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[abcd1234]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[null]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginQueryTest -->
        <test-method status="PASS" signature="before()[pri:0, instance:testng.UsersTest@5649fd9b]" name="before" is-config="true" duration-ms="1" started-at="2018-01-16T10:32:19Z" finished-at="2018-01-16T10:32:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="after()[pri:0, instance:testng.UsersTest@5649fd9b]" name="after" is-config="true" duration-ms="0" started-at="2018-01-16T10:32:19Z" finished-at="2018-01-16T10:32:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
        <test-method status="PASS" signature="loginQueryTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testng.UsersTest@5649fd9b]" name="loginQueryTest" duration-ms="27" started-at="2018-01-16T10:32:19Z" data-provider="loginQuery" finished-at="2018-01-16T10:32:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Invalid username (too long)]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[abcdefghijklmnopqrstuvwxyz]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[mike]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[null]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginQueryTest -->
        <test-method status="PASS" signature="before()[pri:0, instance:testng.UsersTest@5649fd9b]" name="before" is-config="true" duration-ms="0" started-at="2018-01-16T10:32:19Z" finished-at="2018-01-16T10:32:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="after()[pri:0, instance:testng.UsersTest@5649fd9b]" name="after" is-config="true" duration-ms="0" started-at="2018-01-16T10:32:19Z" finished-at="2018-01-16T10:32:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
        <test-method status="PASS" signature="loginQueryTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testng.UsersTest@5649fd9b]" name="loginQueryTest" duration-ms="34" started-at="2018-01-16T10:32:19Z" data-provider="loginQuery" finished-at="2018-01-16T10:32:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Invalid password (too long)]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[mike]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[abcdefghijklmnopqrstuvwxyz]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[null]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginQueryTest -->
        <test-method status="PASS" signature="after()[pri:0, instance:testng.UsersTest@5649fd9b]" name="after" is-config="true" duration-ms="0" started-at="2018-01-16T10:32:19Z" finished-at="2018-01-16T10:32:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
        <test-method status="PASS" signature="before()[pri:0, instance:testng.UsersTest@5649fd9b]" name="before" is-config="true" duration-ms="0" started-at="2018-01-16T10:32:19Z" finished-at="2018-01-16T10:32:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="registerQueryTest(java.lang.String, java.lang.String, boolean)[pri:0, instance:testng.UsersTest@5649fd9b]" name="registerQueryTest" duration-ms="21" started-at="2018-01-16T10:32:19Z" data-provider="registerQuery" finished-at="2018-01-16T10:32:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Username Exists]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[mike]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- registerQueryTest -->
        <test-method status="PASS" signature="registerQueryTest(java.lang.String, java.lang.String, boolean)[pri:0, instance:testng.UsersTest@5649fd9b]" name="registerQueryTest" duration-ms="21" started-at="2018-01-16T10:32:19Z" data-provider="registerQuery" finished-at="2018-01-16T10:32:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Username Doesn't Exist]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[mike9001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- registerQueryTest -->
        <test-method status="PASS" signature="before()[pri:0, instance:testng.UsersTest@5649fd9b]" name="before" is-config="true" duration-ms="0" started-at="2018-01-16T10:32:19Z" finished-at="2018-01-16T10:32:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="after()[pri:0, instance:testng.UsersTest@5649fd9b]" name="after" is-config="true" duration-ms="0" started-at="2018-01-16T10:32:19Z" finished-at="2018-01-16T10:32:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
        <test-method status="PASS" signature="registerQueryTest(java.lang.String, java.lang.String, boolean)[pri:0, instance:testng.UsersTest@5649fd9b]" name="registerQueryTest" duration-ms="22" started-at="2018-01-16T10:32:19Z" data-provider="registerQuery" finished-at="2018-01-16T10:32:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Username Too Long]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[aaaaaaaaaaaaaaaaaaaaa]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- registerQueryTest -->
        <test-method status="PASS" signature="before()[pri:0, instance:testng.UsersTest@5649fd9b]" name="before" is-config="true" duration-ms="0" started-at="2018-01-16T10:32:19Z" finished-at="2018-01-16T10:32:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="after()[pri:0, instance:testng.UsersTest@5649fd9b]" name="after" is-config="true" duration-ms="0" started-at="2018-01-16T10:32:19Z" finished-at="2018-01-16T10:32:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
        <test-method status="PASS" signature="before()[pri:0, instance:testng.UsersTest@5649fd9b]" name="before" is-config="true" duration-ms="0" started-at="2018-01-16T10:32:19Z" finished-at="2018-01-16T10:32:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="after()[pri:0, instance:testng.UsersTest@5649fd9b]" name="after" is-config="true" duration-ms="0" started-at="2018-01-16T10:32:19Z" finished-at="2018-01-16T10:32:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
        <test-method status="PASS" signature="updateUserTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, int)[pri:0, instance:testng.UsersTest@5649fd9b]" name="updateUserTest" duration-ms="46" started-at="2018-01-16T10:32:19Z" data-provider="updateUser" finished-at="2018-01-16T10:32:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Valid credentials; user updated]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[test]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Mike]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Mike]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[23 Mars Place]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[1234567890]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[mike@mike.com]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateUserTest -->
        <test-method status="PASS" signature="after()[pri:0, instance:testng.UsersTest@5649fd9b]" name="after" is-config="true" duration-ms="22" started-at="2018-01-16T10:32:19Z" finished-at="2018-01-16T10:32:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
        <test-method status="PASS" signature="before()[pri:0, instance:testng.UsersTest@5649fd9b]" name="before" is-config="true" duration-ms="0" started-at="2018-01-16T10:32:19Z" finished-at="2018-01-16T10:32:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="updateUserTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, int)[pri:0, instance:testng.UsersTest@5649fd9b]" name="updateUserTest" duration-ms="47" started-at="2018-01-16T10:32:19Z" data-provider="updateUser" finished-at="2018-01-16T10:32:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Password too long]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[aaaaaaaaaaaaaaaaaaaaa]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Mike]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Mike]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[23 Mars Place]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[1234567890]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[mike@mike.com]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateUserTest -->
        <test-method status="PASS" signature="updateUserTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, int)[pri:0, instance:testng.UsersTest@5649fd9b]" name="updateUserTest" duration-ms="50" started-at="2018-01-16T10:32:20Z" data-provider="updateUser" finished-at="2018-01-16T10:32:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Firstname too long]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[test]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[aaaaaaaaaaaaaaaaaaaaa]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Mike]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[23 Mars Place]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[1234567890]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[mike@mike.com]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateUserTest -->
        <test-method status="PASS" signature="after()[pri:0, instance:testng.UsersTest@5649fd9b]" name="after" is-config="true" duration-ms="0" started-at="2018-01-16T10:32:20Z" finished-at="2018-01-16T10:32:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
        <test-method status="PASS" signature="before()[pri:0, instance:testng.UsersTest@5649fd9b]" name="before" is-config="true" duration-ms="0" started-at="2018-01-16T10:32:20Z" finished-at="2018-01-16T10:32:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="before()[pri:0, instance:testng.UsersTest@5649fd9b]" name="before" is-config="true" duration-ms="0" started-at="2018-01-16T10:32:20Z" finished-at="2018-01-16T10:32:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="after()[pri:0, instance:testng.UsersTest@5649fd9b]" name="after" is-config="true" duration-ms="0" started-at="2018-01-16T10:32:20Z" finished-at="2018-01-16T10:32:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
        <test-method status="PASS" signature="updateUserTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, int)[pri:0, instance:testng.UsersTest@5649fd9b]" name="updateUserTest" duration-ms="49" started-at="2018-01-16T10:32:20Z" data-provider="updateUser" finished-at="2018-01-16T10:32:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Lastname too long]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[test]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Mike]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[aaaaaaaaaaaaaaaaaaaaa]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[23 Mars Place]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[1234567890]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[mike@mike.com]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateUserTest -->
        <test-method status="PASS" signature="before()[pri:0, instance:testng.UsersTest@5649fd9b]" name="before" is-config="true" duration-ms="0" started-at="2018-01-16T10:32:20Z" finished-at="2018-01-16T10:32:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="updateUserTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, int)[pri:0, instance:testng.UsersTest@5649fd9b]" name="updateUserTest" duration-ms="46" started-at="2018-01-16T10:32:20Z" data-provider="updateUser" finished-at="2018-01-16T10:32:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Address too long]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[test]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Mike]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Mike]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[1234567890]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[mike@mike.com]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateUserTest -->
        <test-method status="PASS" signature="after()[pri:0, instance:testng.UsersTest@5649fd9b]" name="after" is-config="true" duration-ms="0" started-at="2018-01-16T10:32:20Z" finished-at="2018-01-16T10:32:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
        <test-method status="PASS" signature="after()[pri:0, instance:testng.UsersTest@5649fd9b]" name="after" is-config="true" duration-ms="0" started-at="2018-01-16T10:32:20Z" finished-at="2018-01-16T10:32:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
        <test-method status="PASS" signature="updateUserTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, int)[pri:0, instance:testng.UsersTest@5649fd9b]" name="updateUserTest" duration-ms="47" started-at="2018-01-16T10:32:20Z" data-provider="updateUser" finished-at="2018-01-16T10:32:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Phone non-numeric]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[test]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Mike]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Mike]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[23 Mars Place]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[abcdefghij]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[mike@mike.com]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateUserTest -->
        <test-method status="PASS" signature="before()[pri:0, instance:testng.UsersTest@5649fd9b]" name="before" is-config="true" duration-ms="0" started-at="2018-01-16T10:32:20Z" finished-at="2018-01-16T10:32:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="after()[pri:0, instance:testng.UsersTest@5649fd9b]" name="after" is-config="true" duration-ms="1" started-at="2018-01-16T10:32:20Z" finished-at="2018-01-16T10:32:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
        <test-method status="PASS" signature="updateUserTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, int)[pri:0, instance:testng.UsersTest@5649fd9b]" name="updateUserTest" duration-ms="46" started-at="2018-01-16T10:32:20Z" data-provider="updateUser" finished-at="2018-01-16T10:32:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Email too long]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[test]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Mike]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Mike]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[23 Mars Place]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[23 Mars Place]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[aaaaaaaaaaaaaaaaaaaaa@aaaaaaaaaaaaaaaaaaaaa.com]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateUserTest -->
        <test-method status="PASS" signature="before()[pri:0, instance:testng.UsersTest@5649fd9b]" name="before" is-config="true" duration-ms="0" started-at="2018-01-16T10:32:20Z" finished-at="2018-01-16T10:32:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="after()[pri:0, instance:testng.UsersTest@5649fd9b]" name="after" is-config="true" duration-ms="0" started-at="2018-01-16T10:32:20Z" finished-at="2018-01-16T10:32:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
      </class> <!-- testng.UsersTest -->
      <class name="testng.OrdersTest">
        <test-method status="PASS" signature="before()[pri:0, instance:testng.OrdersTest@3159c4b8]" name="before" is-config="true" duration-ms="1" started-at="2018-01-16T10:32:18Z" finished-at="2018-01-16T10:32:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="addItemToOrderTest(java.lang.String, int, int, boolean)[pri:0, instance:testng.OrdersTest@3159c4b8]" name="addItemToOrderTest" duration-ms="26" started-at="2018-01-16T10:32:18Z" data-provider="addItemToOrder" finished-at="2018-01-16T10:32:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Valid]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[29]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addItemToOrderTest -->
        <test-method status="PASS" signature="after()[pri:0, instance:testng.OrdersTest@3159c4b8]" name="after" is-config="true" duration-ms="25" started-at="2018-01-16T10:32:18Z" finished-at="2018-01-16T10:32:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
        <test-method status="PASS" signature="addItemToOrderTest(java.lang.String, int, int, boolean)[pri:0, instance:testng.OrdersTest@3159c4b8]" name="addItemToOrderTest" duration-ms="28" started-at="2018-01-16T10:32:18Z" data-provider="addItemToOrder" finished-at="2018-01-16T10:32:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Invalid Item]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[29]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addItemToOrderTest -->
        <test-method status="PASS" signature="before()[pri:0, instance:testng.OrdersTest@3159c4b8]" name="before" is-config="true" duration-ms="0" started-at="2018-01-16T10:32:18Z" finished-at="2018-01-16T10:32:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="before()[pri:0, instance:testng.OrdersTest@3159c4b8]" name="before" is-config="true" duration-ms="0" started-at="2018-01-16T10:32:18Z" finished-at="2018-01-16T10:32:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="addItemToOrderTest(java.lang.String, int, int, boolean)[pri:0, instance:testng.OrdersTest@3159c4b8]" name="addItemToOrderTest" duration-ms="23" started-at="2018-01-16T10:32:18Z" data-provider="addItemToOrder" finished-at="2018-01-16T10:32:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Invalid Order]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[40]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addItemToOrderTest -->
        <test-method status="PASS" signature="after()[pri:0, instance:testng.OrdersTest@3159c4b8]" name="after" is-config="true" duration-ms="0" started-at="2018-01-16T10:32:18Z" finished-at="2018-01-16T10:32:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
        <test-method status="PASS" signature="after()[pri:0, instance:testng.OrdersTest@3159c4b8]" name="after" is-config="true" duration-ms="0" started-at="2018-01-16T10:32:18Z" finished-at="2018-01-16T10:32:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
        <test-method status="PASS" signature="addItemToOrderTest(java.lang.String, int, int, boolean)[pri:0, instance:testng.OrdersTest@3159c4b8]" name="addItemToOrderTest" duration-ms="24" started-at="2018-01-16T10:32:18Z" data-provider="addItemToOrder" finished-at="2018-01-16T10:32:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Item in Order Already]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addItemToOrderTest -->
        <test-method status="PASS" signature="before()[pri:0, instance:testng.OrdersTest@3159c4b8]" name="before" is-config="true" duration-ms="0" started-at="2018-01-16T10:32:18Z" finished-at="2018-01-16T10:32:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="after()[pri:0, instance:testng.OrdersTest@3159c4b8]" name="after" is-config="true" duration-ms="1" started-at="2018-01-16T10:32:18Z" finished-at="2018-01-16T10:32:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
        <test-method status="PASS" signature="before()[pri:0, instance:testng.OrdersTest@3159c4b8]" name="before" is-config="true" duration-ms="1" started-at="2018-01-16T10:32:18Z" finished-at="2018-01-16T10:32:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="createOrderTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, boolean)[pri:0, instance:testng.OrdersTest@3159c4b8]" name="createOrderTest" duration-ms="27" started-at="2018-01-16T10:32:18Z" data-provider="createOrder" finished-at="2018-01-16T10:32:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Valid]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[1111111111]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[1234]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[11111]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[11.11]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createOrderTest -->
        <test-method status="PASS" signature="after()[pri:0, instance:testng.OrdersTest@3159c4b8]" name="after" is-config="true" duration-ms="25" started-at="2018-01-16T10:32:18Z" finished-at="2018-01-16T10:32:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
        <test-method status="PASS" signature="before()[pri:0, instance:testng.OrdersTest@3159c4b8]" name="before" is-config="true" duration-ms="0" started-at="2018-01-16T10:32:18Z" finished-at="2018-01-16T10:32:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="getOrdersByUserTest(java.lang.String, int, boolean)[pri:0, instance:testng.OrdersTest@3159c4b8]" name="getOrdersByUserTest" duration-ms="35" started-at="2018-01-16T10:32:18Z" data-provider="getOrdersByUser" finished-at="2018-01-16T10:32:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Valid]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getOrdersByUserTest -->
        <test-method status="PASS" signature="after()[pri:0, instance:testng.OrdersTest@3159c4b8]" name="after" is-config="true" duration-ms="0" started-at="2018-01-16T10:32:18Z" finished-at="2018-01-16T10:32:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
        <test-method status="PASS" signature="before()[pri:0, instance:testng.OrdersTest@3159c4b8]" name="before" is-config="true" duration-ms="2" started-at="2018-01-16T10:32:18Z" finished-at="2018-01-16T10:32:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="getOrdersByUserTest(java.lang.String, int, boolean)[pri:0, instance:testng.OrdersTest@3159c4b8]" name="getOrdersByUserTest" duration-ms="24" started-at="2018-01-16T10:32:18Z" data-provider="getOrdersByUser" finished-at="2018-01-16T10:32:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[User didn’t make order]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getOrdersByUserTest -->
        <test-method status="PASS" signature="after()[pri:0, instance:testng.OrdersTest@3159c4b8]" name="after" is-config="true" duration-ms="0" started-at="2018-01-16T10:32:18Z" finished-at="2018-01-16T10:32:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
        <test-method status="PASS" signature="before()[pri:0, instance:testng.OrdersTest@3159c4b8]" name="before" is-config="true" duration-ms="0" started-at="2018-01-16T10:32:18Z" finished-at="2018-01-16T10:32:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="getOrdersByUserTest(java.lang.String, int, boolean)[pri:0, instance:testng.OrdersTest@3159c4b8]" name="getOrdersByUserTest" duration-ms="24" started-at="2018-01-16T10:32:18Z" data-provider="getOrdersByUser" finished-at="2018-01-16T10:32:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Users doesn’t exist]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[40]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getOrdersByUserTest -->
        <test-method status="PASS" signature="after()[pri:0, instance:testng.OrdersTest@3159c4b8]" name="after" is-config="true" duration-ms="0" started-at="2018-01-16T10:32:18Z" finished-at="2018-01-16T10:32:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
      </class> <!-- testng.OrdersTest -->
      <class name="testng.ItemsTest">
        <test-method status="PASS" signature="before()[pri:0, instance:testng.ItemsTest@4b952a2d]" name="before" is-config="true" duration-ms="5" started-at="2018-01-16T10:32:17Z" finished-at="2018-01-16T10:32:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="getAllActiveItemsTest()[pri:0, instance:testng.ItemsTest@4b952a2d]" name="getAllActiveItemsTest" duration-ms="536" started-at="2018-01-16T10:32:17Z" finished-at="2018-01-16T10:32:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAllActiveItemsTest -->
        <test-method status="PASS" signature="After()[pri:0, instance:testng.ItemsTest@4b952a2d]" name="After" is-config="true" duration-ms="1" started-at="2018-01-16T10:32:18Z" finished-at="2018-01-16T10:32:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- After -->
        <test-method status="PASS" signature="getItemsCountTest()[pri:0, instance:testng.ItemsTest@4b952a2d]" name="getItemsCountTest" duration-ms="32" started-at="2018-01-16T10:32:18Z" finished-at="2018-01-16T10:32:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getItemsCountTest -->
        <test-method status="PASS" signature="before()[pri:0, instance:testng.ItemsTest@4b952a2d]" name="before" is-config="true" duration-ms="0" started-at="2018-01-16T10:32:18Z" finished-at="2018-01-16T10:32:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="After()[pri:0, instance:testng.ItemsTest@4b952a2d]" name="After" is-config="true" duration-ms="0" started-at="2018-01-16T10:32:18Z" finished-at="2018-01-16T10:32:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- After -->
        <test-method status="PASS" signature="before()[pri:0, instance:testng.ItemsTest@4b952a2d]" name="before" is-config="true" duration-ms="0" started-at="2018-01-16T10:32:18Z" finished-at="2018-01-16T10:32:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="getTotalsTest(java.lang.String, java.util.HashSet, java.lang.Double)[pri:0, instance:testng.ItemsTest@4b952a2d]" name="getTotalsTest" duration-ms="61" started-at="2018-01-16T10:32:18Z" data-provider="getTotals" finished-at="2018-01-16T10:32:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Valid]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[1, 2]]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[29.5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTotalsTest -->
        <test-method status="PASS" signature="getTotalsTest(java.lang.String, java.util.HashSet, java.lang.Double)[pri:0, instance:testng.ItemsTest@4b952a2d]" name="getTotalsTest" duration-ms="27" started-at="2018-01-16T10:32:18Z" data-provider="getTotals" finished-at="2018-01-16T10:32:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Invalid ID]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[8, 1]]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[13.5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTotalsTest -->
        <test-method status="PASS" signature="before()[pri:0, instance:testng.ItemsTest@4b952a2d]" name="before" is-config="true" duration-ms="0" started-at="2018-01-16T10:32:18Z" finished-at="2018-01-16T10:32:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="After()[pri:0, instance:testng.ItemsTest@4b952a2d]" name="After" is-config="true" duration-ms="0" started-at="2018-01-16T10:32:18Z" finished-at="2018-01-16T10:32:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- After -->
        <test-method status="PASS" signature="After()[pri:0, instance:testng.ItemsTest@4b952a2d]" name="After" is-config="true" duration-ms="0" started-at="2018-01-16T10:32:18Z" finished-at="2018-01-16T10:32:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- After -->
        <test-method status="PASS" signature="getTotalsTest(java.lang.String, java.util.HashSet, java.lang.Double)[pri:0, instance:testng.ItemsTest@4b952a2d]" name="getTotalsTest" duration-ms="26" started-at="2018-01-16T10:32:18Z" data-provider="getTotals" finished-at="2018-01-16T10:32:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[All Invalid]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[8, 9]]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTotalsTest -->
        <test-method status="PASS" signature="before()[pri:0, instance:testng.ItemsTest@4b952a2d]" name="before" is-config="true" duration-ms="0" started-at="2018-01-16T10:32:18Z" finished-at="2018-01-16T10:32:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="After()[pri:0, instance:testng.ItemsTest@4b952a2d]" name="After" is-config="true" duration-ms="0" started-at="2018-01-16T10:32:18Z" finished-at="2018-01-16T10:32:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- After -->
      </class> <!-- testng.ItemsTest -->
      <class name="testng.ReviewsTest">
        <test-method status="PASS" signature="getItemInfoTest(java.lang.String, java.lang.String, del.res.models.Item)[pri:0, instance:testng.ReviewsTest@4bec1f0c]" name="getItemInfoTest" duration-ms="27" started-at="2018-01-16T10:32:19Z" data-provider="getItemInfo" finished-at="2018-01-16T10:32:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Valid]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[del.res.models.Item@2dc9b0f5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getItemInfoTest -->
        <test-method status="PASS" signature="before()[pri:0, instance:testng.ReviewsTest@4bec1f0c]" name="before" is-config="true" duration-ms="0" started-at="2018-01-16T10:32:19Z" finished-at="2018-01-16T10:32:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="before()[pri:0, instance:testng.ReviewsTest@4bec1f0c]" name="before" is-config="true" duration-ms="0" started-at="2018-01-16T10:32:19Z" finished-at="2018-01-16T10:32:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="getPastReviewsTest(java.lang.String, java.lang.String, boolean)[pri:0, instance:testng.ReviewsTest@4bec1f0c]" name="getPastReviewsTest" duration-ms="29" started-at="2018-01-16T10:32:19Z" data-provider="getPastReviews" finished-at="2018-01-16T10:32:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Valid]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPastReviewsTest -->
        <test-method status="PASS" signature="after()[pri:0, instance:testng.ReviewsTest@4bec1f0c]" name="after" is-config="true" duration-ms="0" started-at="2018-01-16T10:32:19Z" finished-at="2018-01-16T10:32:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
        <test-method status="PASS" signature="after()[pri:0, instance:testng.ReviewsTest@4bec1f0c]" name="after" is-config="true" duration-ms="0" started-at="2018-01-16T10:32:19Z" finished-at="2018-01-16T10:32:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
        <test-method status="PASS" signature="submitReviewTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, boolean)[pri:0, instance:testng.ReviewsTest@4bec1f0c]" name="submitReviewTest" duration-ms="25" started-at="2018-01-16T10:32:19Z" data-provider="submitReview" finished-at="2018-01-16T10:32:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Valid]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Pretty Good]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submitReviewTest -->
        <test-method status="PASS" signature="before()[pri:0, instance:testng.ReviewsTest@4bec1f0c]" name="before" is-config="true" duration-ms="0" started-at="2018-01-16T10:32:19Z" finished-at="2018-01-16T10:32:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="after()[pri:0, instance:testng.ReviewsTest@4bec1f0c]" name="after" is-config="true" duration-ms="23" started-at="2018-01-16T10:32:19Z" finished-at="2018-01-16T10:32:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
      </class> <!-- testng.ReviewsTest -->
    </test> <!-- Regular User Tests -->
    <test name="Administrative User Tests" duration-ms="531" started-at="2018-01-16T15:32:20Z" finished-at="2018-01-16T15:32:20Z">
      <class name="testng.StoresTest">
        <test-method status="PASS" signature="before()[pri:0, instance:testng.StoresTest@4e9ba398]" name="before" is-config="true" duration-ms="0" started-at="2018-01-16T10:32:20Z" finished-at="2018-01-16T10:32:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="createStoreTest(java.lang.String, del.res.models.Store, boolean)[pri:0, instance:testng.StoresTest@4e9ba398]" name="createStoreTest" duration-ms="27" started-at="2018-01-16T10:32:20Z" data-provider="createStore" finished-at="2018-01-16T10:32:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Valid]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[del.res.models.Store@6853425f]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createStoreTest -->
        <test-method status="PASS" signature="after()[pri:0, instance:testng.StoresTest@4e9ba398]" name="after" is-config="true" duration-ms="27" started-at="2018-01-16T10:32:20Z" finished-at="2018-01-16T10:32:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
        <test-method status="PASS" signature="updateStoreTest(java.lang.String, del.res.models.Store, boolean)[pri:0, instance:testng.StoresTest@4e9ba398]" name="updateStoreTest" duration-ms="55" started-at="2018-01-16T10:32:20Z" data-provider="updateStore" finished-at="2018-01-16T10:32:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Valid]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[del.res.models.Store@258d79be]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateStoreTest -->
        <test-method status="PASS" signature="before()[pri:0, instance:testng.StoresTest@4e9ba398]" name="before" is-config="true" duration-ms="0" started-at="2018-01-16T10:32:20Z" finished-at="2018-01-16T10:32:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="after()[pri:0, instance:testng.StoresTest@4e9ba398]" name="after" is-config="true" duration-ms="24" started-at="2018-01-16T10:32:20Z" finished-at="2018-01-16T10:32:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
      </class> <!-- testng.StoresTest -->
      <class name="testng.ItemsTest">
        <test-method status="PASS" signature="addItemTest(java.lang.String, java.util.ArrayList, boolean)[pri:0, instance:testng.ItemsTest@3632be31]" name="addItemTest" duration-ms="25" started-at="2018-01-16T10:32:20Z" data-provider="addItem" finished-at="2018-01-16T10:32:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Valid info]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Plainer Pizza, Testaroo, 3.5, Images/ayy.png, 1, Pizza]]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addItemTest -->
        <test-method status="PASS" signature="before()[pri:0, instance:testng.ItemsTest@3632be31]" name="before" is-config="true" duration-ms="0" started-at="2018-01-16T10:32:20Z" finished-at="2018-01-16T10:32:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="After()[pri:0, instance:testng.ItemsTest@3632be31]" name="After" is-config="true" duration-ms="22" started-at="2018-01-16T10:32:20Z" finished-at="2018-01-16T10:32:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- After -->
        <test-method status="PASS" signature="addItemTest(java.lang.String, java.util.ArrayList, boolean)[pri:0, instance:testng.ItemsTest@3632be31]" name="addItemTest" duration-ms="21" started-at="2018-01-16T10:32:20Z" data-provider="addItem" finished-at="2018-01-16T10:32:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Price not a number]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Plainer Pizza, Testaroo, Tree Fiddy, Images/ayy.png, 1, Pizza]]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addItemTest -->
        <test-method status="PASS" signature="before()[pri:0, instance:testng.ItemsTest@3632be31]" name="before" is-config="true" duration-ms="0" started-at="2018-01-16T10:32:20Z" finished-at="2018-01-16T10:32:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="addItemTest(java.lang.String, java.util.ArrayList, boolean)[pri:0, instance:testng.ItemsTest@3632be31]" name="addItemTest" duration-ms="23" started-at="2018-01-16T10:32:20Z" data-provider="addItem" finished-at="2018-01-16T10:32:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Active not a number]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Plainer Pizza, Testaroo, 3.5, Images/ayy.png, yes, Pizza]]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addItemTest -->
        <test-method status="PASS" signature="before()[pri:0, instance:testng.ItemsTest@3632be31]" name="before" is-config="true" duration-ms="0" started-at="2018-01-16T10:32:20Z" finished-at="2018-01-16T10:32:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="After()[pri:0, instance:testng.ItemsTest@3632be31]" name="After" is-config="true" duration-ms="0" started-at="2018-01-16T10:32:20Z" finished-at="2018-01-16T10:32:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- After -->
        <test-method status="PASS" signature="before()[pri:0, instance:testng.ItemsTest@3632be31]" name="before" is-config="true" duration-ms="0" started-at="2018-01-16T10:32:20Z" finished-at="2018-01-16T10:32:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="After()[pri:0, instance:testng.ItemsTest@3632be31]" name="After" is-config="true" duration-ms="0" started-at="2018-01-16T10:32:20Z" finished-at="2018-01-16T10:32:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- After -->
        <test-method status="PASS" signature="getAllItemsTest()[pri:0, instance:testng.ItemsTest@3632be31]" name="getAllItemsTest" duration-ms="23" started-at="2018-01-16T10:32:20Z" finished-at="2018-01-16T10:32:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAllItemsTest -->
        <test-method status="PASS" signature="After()[pri:0, instance:testng.ItemsTest@3632be31]" name="After" is-config="true" duration-ms="0" started-at="2018-01-16T10:32:20Z" finished-at="2018-01-16T10:32:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- After -->
        <test-method status="PASS" signature="updateItemTest(java.lang.String, java.util.ArrayList, boolean)[pri:0, instance:testng.ItemsTest@3632be31]" name="updateItemTest" duration-ms="54" started-at="2018-01-16T10:32:20Z" data-provider="updateItem" finished-at="2018-01-16T10:32:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Valid info]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Plain Pizza, Testaroo, 3.5, Images/ayy.png, 1, Pizza, 1]]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateItemTest -->
        <test-method status="PASS" signature="before()[pri:0, instance:testng.ItemsTest@3632be31]" name="before" is-config="true" duration-ms="0" started-at="2018-01-16T10:32:20Z" finished-at="2018-01-16T10:32:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="After()[pri:0, instance:testng.ItemsTest@3632be31]" name="After" is-config="true" duration-ms="33" started-at="2018-01-16T10:32:20Z" finished-at="2018-01-16T10:32:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- After -->
        <test-method status="PASS" signature="updateItemTest(java.lang.String, java.util.ArrayList, boolean)[pri:0, instance:testng.ItemsTest@3632be31]" name="updateItemTest" duration-ms="59" started-at="2018-01-16T10:32:20Z" data-provider="updateItem" finished-at="2018-01-16T10:32:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Price not a number]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Plain Pizza, Testaroo, Tree Fiddy, Images/ayy.png, 1, Pizza, 1]]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateItemTest -->
        <test-method status="PASS" signature="before()[pri:0, instance:testng.ItemsTest@3632be31]" name="before" is-config="true" duration-ms="0" started-at="2018-01-16T10:32:20Z" finished-at="2018-01-16T10:32:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="After()[pri:0, instance:testng.ItemsTest@3632be31]" name="After" is-config="true" duration-ms="0" started-at="2018-01-16T10:32:20Z" finished-at="2018-01-16T10:32:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- After -->
        <test-method status="PASS" signature="updateItemTest(java.lang.String, java.util.ArrayList, boolean)[pri:0, instance:testng.ItemsTest@3632be31]" name="updateItemTest" duration-ms="58" started-at="2018-01-16T10:32:20Z" data-provider="updateItem" finished-at="2018-01-16T10:32:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Active not a number]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Plain Pizza, Testaroo, 3.5, Images/ayy.png, yes, Pizza, 1]]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateItemTest -->
        <test-method status="PASS" signature="before()[pri:0, instance:testng.ItemsTest@3632be31]" name="before" is-config="true" duration-ms="0" started-at="2018-01-16T10:32:20Z" finished-at="2018-01-16T10:32:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="After()[pri:0, instance:testng.ItemsTest@3632be31]" name="After" is-config="true" duration-ms="0" started-at="2018-01-16T10:32:20Z" finished-at="2018-01-16T10:32:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- After -->
      </class> <!-- testng.ItemsTest -->
      <class name="testng.OrdersTest">
        <test-method status="PASS" signature="getAllOrdersTest()[pri:0, instance:testng.OrdersTest@5abca1e0]" name="getAllOrdersTest" duration-ms="29" started-at="2018-01-16T10:32:20Z" finished-at="2018-01-16T10:32:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAllOrdersTest -->
        <test-method status="PASS" signature="before()[pri:0, instance:testng.OrdersTest@5abca1e0]" name="before" is-config="true" duration-ms="0" started-at="2018-01-16T10:32:20Z" finished-at="2018-01-16T10:32:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="after()[pri:0, instance:testng.OrdersTest@5abca1e0]" name="after" is-config="true" duration-ms="0" started-at="2018-01-16T10:32:20Z" finished-at="2018-01-16T10:32:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
      </class> <!-- testng.OrdersTest -->
      <class name="testng.ReviewsTest">
        <test-method status="PASS" signature="before()[pri:0, instance:testng.ReviewsTest@2286778]" name="before" is-config="true" duration-ms="0" started-at="2018-01-16T10:32:20Z" finished-at="2018-01-16T10:32:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="getReviewsByUserTest(java.lang.String, java.lang.String, boolean)[pri:0, instance:testng.ReviewsTest@2286778]" name="getReviewsByUserTest" duration-ms="40" started-at="2018-01-16T10:32:20Z" data-provider="getReviewsByUser" finished-at="2018-01-16T10:32:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Valid]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getReviewsByUserTest -->
        <test-method status="PASS" signature="after()[pri:0, instance:testng.ReviewsTest@2286778]" name="after" is-config="true" duration-ms="0" started-at="2018-01-16T10:32:20Z" finished-at="2018-01-16T10:32:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
      </class> <!-- testng.ReviewsTest -->
    </test> <!-- Administrative User Tests -->
  </suite> <!-- Unit Tests -->
</testng-results>
